# MIT License
#
# Copyright (c) 2021 Mert Bora Alper and EASE lab
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: End-to-End Tests

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  KUBECONFIG: /etc/kubernetes/admin.conf

jobs:
  test-compose:
    name: Test Docker Compose
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        benchmark: [chained-function-serving]
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        lfs: 'true'

    - name: start docker-compose benchmark
      working-directory: benchmarks/${{ matrix.benchmark }}
      run: |
        docker-compose up &> log_file &
        sleep 15s

    - name: invoke the chain
      run: |
        ./tools/bin/grpcurl -plaintext localhost:50051 helloworld.Greeter.SayHello

    - name: show docker-compose log
      run: cat benchmarks/${{ matrix.benchmark }}/log_file

  test:
    name: Test
    runs-on: [stock-knative]
    strategy:
      matrix:
        benchmark:
          - chained-function-serving
    steps:
      - uses: actions/checkout@v2

      - name: Clear Local Registry
        run: echo TODO

      # - name: Run build-push.sh
      #   working-directory: benchmarks/${{ matrix.benchmark }}
      #   run: |
      #     set -x

      #     pwd
      #     ls -lh
      #     ./build-push.sh

      # - name: Up
      #   working-directory: benchmarks/${{ matrix.benchmark }}
      #   run: ./up.sh

      # - name: Test
      #   working-directory: benchmarks/${{ matrix.benchmark }}
      #   run: ./test.sh

      # - name: Down
      #   if: ${{ always() }}
      #   working-directory: benchmarks/${{ matrix.benchmark }}
      #   run: ./down.sh
